import * as code from 'vscode';
import * as ls from 'vscode-languageserver-types';
import * as proto from './protocol';
export declare function asTextDocumentIdentifier(textDocument: code.TextDocument): ls.TextDocumentIdentifier;
export declare function asOpenTextDocumentParams(textDocument: code.TextDocument): proto.DidOpenTextDocumentParams;
export declare function asChangeTextDocumentParams(textDocument: code.TextDocument): proto.DidChangeTextDocumentParams;
export declare function asChangeTextDocumentParams(event: code.TextDocumentChangeEvent): proto.DidChangeTextDocumentParams;
export declare function asCloseTextDocumentParams(textDocument: code.TextDocument): proto.DidCloseTextDocumentParams;
export declare function asSaveTextDocumentParams(textDocument: code.TextDocument): proto.DidSaveTextDocumentParams;
export declare function asTextDocumentPositionParams(textDocument: code.TextDocument, position: code.Position): proto.TextDocumentPositionParams;
export declare function asWorkerPosition(position: code.Position): ls.Position;
export declare function asRange(value: code.Range): ls.Range;
export declare function asPosition(value: code.Position): ls.Position;
export declare function asDiagnosticSeverity(value: code.DiagnosticSeverity): ls.DiagnosticSeverity;
export declare function asDiagnostic(item: code.Diagnostic): ls.Diagnostic;
export declare function asDiagnostics(items: code.Diagnostic[]): ls.Diagnostic[];
export declare function asCompletionItem(item: code.CompletionItem): ls.CompletionItem;
export declare function asTextEdit(edit: code.TextEdit): ls.TextEdit;
export declare function asReferenceParams(textDocument: code.TextDocument, position: code.Position, options: {
    includeDeclaration: boolean;
}): proto.ReferenceParams;
export declare function asCodeActionContext(context: code.CodeActionContext): ls.CodeActionContext;
export declare function asCommand(item: code.Command): ls.Command;
export declare function asCodeLens(item: code.CodeLens): ls.CodeLens;
export declare function asFormattingOptions(item: code.FormattingOptions): ls.FormattingOptions;
export declare function asDocumentSymbolParams(textDocument: code.TextDocument): proto.DocumentSymbolParams;
export declare function asCodeLensParams(textDocument: code.TextDocument): proto.CodeLensParams;
